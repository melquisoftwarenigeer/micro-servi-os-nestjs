services:
  auth:
    image: melquidocker/micro-servico-nest:auth-v1.6.0
    container_name: auth-service
    ports:
      - '3001:3000'
    depends_on:
      - auth-db
      - projects
      - tasks
    env_file:
      - .env.shared
    environment:
      - DATABASE_URL=${AUTH_DATABASE_URL}
      - PROJECTS_URL=http://projects:3000
      - SERVICE_PROJECTS=http://projects:3000/projects
      - TASKS_URL=http://tasks:3000
      - SERVICE_TASK=http://tasks:3000/tasks
      - AUTH_PORT=3000

  auth-db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
      POSTGRES_DB: ${AUTH_DB_NAME}
    ports:
      - '5433:5432'
    volumes:
      - auth-db-data:/var/lib/postgresql/data

  projects:
    image: melquidocker/micro-servico-nest:projects-v1.6.0
    container_name: projects-service
    ports:
      - '3002:3000'
    depends_on:
      - projects-db
    env_file:
      - .env.shared
    environment:
      - DATABASE_URL=${PROJECTS_DATABASE_URL}
      - AUTH_URL=http://auth:3000
      - PROJECTS_PORT=3000

  projects-db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${PROJECTS_DB_USER}
      POSTGRES_PASSWORD: ${PROJECTS_DB_PASSWORD}
      POSTGRES_DB: ${PROJECTS_DB_NAME}
    ports:
      - '5434:5432'
    volumes:
      - projects-db-data:/var/lib/postgresql/data

  tasks:
    image: melquidocker/micro-servico-nest:task-v1.6.0
    container_name: tasks-service
    ports:
      - '3003:3000'
    depends_on:
      - projects-db
    env_file:
      - .env.shared
    environment:
      - DATABASE_URL=${TASKS_DATABASE_URL}
      - AUTH_URL=http://auth:3000
      - TASKS_PORT=3000

  tasks-db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${TASKS_DB_USER}
      POSTGRES_PASSWORD: ${TASKS_DB_PASSWORD}
      POSTGRES_DB: ${TASKS_DB_NAME}
    ports:
      - '5435:5432'
    volumes:
      - tasks-db-data:/var/lib/postgresql/data

volumes:
  auth-db-data:
  projects-db-data:
  tasks-db-data:
